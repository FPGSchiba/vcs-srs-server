name: Release Version

on:
  push:
    branches:
      - master

jobs:
  changelog:
    permissions:
      contents: write
      pull-requests: write
    name: Changelog
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Not implemented
        run: exit 1
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust-Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cargo-smart-release
        run: cargo install cargo-smart-release
      
      - name: Generate Changelog
        run: cargo changelog --write

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    needs: changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Semver Tag
        uses: K-Phoen/semver-release-action@v1.3.2
        id: semver
        with:
          release_branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tag: ${{ steps.semver.outputs.tag }}

  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: vngd-srs-server
            asset_name: vngd-srs-server-linux-amd64
          - os: windows-latest
            artifact_name: vngd-srs-server.exe
            asset_name: vngd-srs-server-windows-amd64.exe
          - os: macos-latest
            artifact_name: vngd-srs-server
            asset_name: vngd-srs-server-macos-amd64
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust-Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: -Awarnings

      - name: Build
        run: cargo build --release
      
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ needs.release.outputs.tag }}
