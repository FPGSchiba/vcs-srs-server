name: release.yml
on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            build_cmd: wails build
            headless_cmd: go build -tags desktop,production -ldflags "-w -s" -o build/bin/vcs-server-headless
          - os: windows-latest
            build_cmd: wails build
            headless_cmd: go build -tags desktop,production -ldflags "-w -s -H windowsgui" -o build/bin/vcs-server-headless.exe
          - os: macos-latest
            build_cmd: wails build
            headless_cmd: go build -tags desktop,production -ldflags "-w -s" -o build/bin/vcs-server-headless.app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build (Normal)
        run: ${{ matrix.build_cmd }}

      - name: Build (Headless)
        run: ${{ matrix.headless_cmd }}

      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binaries
          path: build/bin/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: ./artifacts/**/*.*
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/vcs-server:${{ github.ref_name }}