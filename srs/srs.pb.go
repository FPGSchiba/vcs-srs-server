// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: srs.proto

package srspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerUpdate_UpdateType int32

const (
	ServerUpdate_UNKNOWN                 ServerUpdate_UpdateType = 0
	ServerUpdate_CLIENT_JOINED           ServerUpdate_UpdateType = 1
	ServerUpdate_CLIENT_LEFT             ServerUpdate_UpdateType = 2
	ServerUpdate_CLIENT_RADIO_UPDATE     ServerUpdate_UpdateType = 3
	ServerUpdate_CLIENT_INFO_UPDATE      ServerUpdate_UpdateType = 4
	ServerUpdate_SERVER_SETTINGS_CHANGED ServerUpdate_UpdateType = 5
	ServerUpdate_SERVER_ACTION           ServerUpdate_UpdateType = 6
)

// Enum value maps for ServerUpdate_UpdateType.
var (
	ServerUpdate_UpdateType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CLIENT_JOINED",
		2: "CLIENT_LEFT",
		3: "CLIENT_RADIO_UPDATE",
		4: "CLIENT_INFO_UPDATE",
		5: "SERVER_SETTINGS_CHANGED",
		6: "SERVER_ACTION",
	}
	ServerUpdate_UpdateType_value = map[string]int32{
		"UNKNOWN":                 0,
		"CLIENT_JOINED":           1,
		"CLIENT_LEFT":             2,
		"CLIENT_RADIO_UPDATE":     3,
		"CLIENT_INFO_UPDATE":      4,
		"SERVER_SETTINGS_CHANGED": 5,
		"SERVER_ACTION":           6,
	}
)

func (x ServerUpdate_UpdateType) Enum() *ServerUpdate_UpdateType {
	p := new(ServerUpdate_UpdateType)
	*p = x
	return p
}

func (x ServerUpdate_UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerUpdate_UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_srs_proto_enumTypes[0].Descriptor()
}

func (ServerUpdate_UpdateType) Type() protoreflect.EnumType {
	return &file_srs_proto_enumTypes[0]
}

func (x ServerUpdate_UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerUpdate_UpdateType.Descriptor instead.
func (ServerUpdate_UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{2, 0}
}

type ServerAction_ActionType int32

const (
	ServerAction_UNKNOWN ServerAction_ActionType = 0
	ServerAction_KICK    ServerAction_ActionType = 1
	ServerAction_BAN     ServerAction_ActionType = 2
	ServerAction_MUTE    ServerAction_ActionType = 3
	ServerAction_UNMUTE  ServerAction_ActionType = 4
)

// Enum value maps for ServerAction_ActionType.
var (
	ServerAction_ActionType_name = map[int32]string{
		0: "UNKNOWN",
		1: "KICK",
		2: "BAN",
		3: "MUTE",
		4: "UNMUTE",
	}
	ServerAction_ActionType_value = map[string]int32{
		"UNKNOWN": 0,
		"KICK":    1,
		"BAN":     2,
		"MUTE":    3,
		"UNMUTE":  4,
	}
)

func (x ServerAction_ActionType) Enum() *ServerAction_ActionType {
	p := new(ServerAction_ActionType)
	*p = x
	return p
}

func (x ServerAction_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerAction_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_srs_proto_enumTypes[1].Descriptor()
}

func (ServerAction_ActionType) Type() protoreflect.EnumType {
	return &file_srs_proto_enumTypes[1]
}

func (x ServerAction_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerAction_ActionType.Descriptor instead.
func (ServerAction_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{4, 0}
}

// Empty message for requests that don't need parameters
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_srs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{0}
}

// Subscribe request
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientGuid    string                 `protobuf:"bytes,1,opt,name=client_guid,json=clientGuid,proto3" json:"client_guid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_srs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeRequest) GetClientGuid() string {
	if x != nil {
		return x.ClientGuid
	}
	return ""
}

// Server update message
type ServerUpdate struct {
	state protoimpl.MessageState  `protogen:"open.v1"`
	Type  ServerUpdate_UpdateType `protobuf:"varint,1,opt,name=type,proto3,enum=srspb.ServerUpdate_UpdateType" json:"type,omitempty"`
	// Types that are valid to be assigned to Update:
	//
	//	*ServerUpdate_ClientUpdate
	//	*ServerUpdate_ServerAction
	//	*ServerUpdate_SettingsUpdate
	Update        isServerUpdate_Update `protobuf_oneof:"update"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerUpdate) Reset() {
	*x = ServerUpdate{}
	mi := &file_srs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerUpdate) ProtoMessage() {}

func (x *ServerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerUpdate.ProtoReflect.Descriptor instead.
func (*ServerUpdate) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{2}
}

func (x *ServerUpdate) GetType() ServerUpdate_UpdateType {
	if x != nil {
		return x.Type
	}
	return ServerUpdate_UNKNOWN
}

func (x *ServerUpdate) GetUpdate() isServerUpdate_Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *ServerUpdate) GetClientUpdate() *ClientUpdate {
	if x != nil {
		if x, ok := x.Update.(*ServerUpdate_ClientUpdate); ok {
			return x.ClientUpdate
		}
	}
	return nil
}

func (x *ServerUpdate) GetServerAction() *ServerAction {
	if x != nil {
		if x, ok := x.Update.(*ServerUpdate_ServerAction); ok {
			return x.ServerAction
		}
	}
	return nil
}

func (x *ServerUpdate) GetSettingsUpdate() *ServerSettings {
	if x != nil {
		if x, ok := x.Update.(*ServerUpdate_SettingsUpdate); ok {
			return x.SettingsUpdate
		}
	}
	return nil
}

type isServerUpdate_Update interface {
	isServerUpdate_Update()
}

type ServerUpdate_ClientUpdate struct {
	ClientUpdate *ClientUpdate `protobuf:"bytes,2,opt,name=client_update,json=clientUpdate,proto3,oneof"`
}

type ServerUpdate_ServerAction struct {
	ServerAction *ServerAction `protobuf:"bytes,3,opt,name=server_action,json=serverAction,proto3,oneof"`
}

type ServerUpdate_SettingsUpdate struct {
	SettingsUpdate *ServerSettings `protobuf:"bytes,4,opt,name=settings_update,json=settingsUpdate,proto3,oneof"`
}

func (*ServerUpdate_ClientUpdate) isServerUpdate_Update() {}

func (*ServerUpdate_ServerAction) isServerUpdate_Update() {}

func (*ServerUpdate_SettingsUpdate) isServerUpdate_Update() {}

// Client update information
type ClientUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientGuid    string                 `protobuf:"bytes,1,opt,name=client_guid,json=clientGuid,proto3" json:"client_guid,omitempty"`
	ClientInfo    *ClientInfo            `protobuf:"bytes,2,opt,name=client_info,json=clientInfo,proto3,oneof" json:"client_info,omitempty"`
	RadioInfo     *RadioInfo             `protobuf:"bytes,3,opt,name=radio_info,json=radioInfo,proto3,oneof" json:"radio_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientUpdate) Reset() {
	*x = ClientUpdate{}
	mi := &file_srs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUpdate) ProtoMessage() {}

func (x *ClientUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUpdate.ProtoReflect.Descriptor instead.
func (*ClientUpdate) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{3}
}

func (x *ClientUpdate) GetClientGuid() string {
	if x != nil {
		return x.ClientGuid
	}
	return ""
}

func (x *ClientUpdate) GetClientInfo() *ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *ClientUpdate) GetRadioInfo() *RadioInfo {
	if x != nil {
		return x.RadioInfo
	}
	return nil
}

// Server action (kicks, bans, mutes)
type ServerAction struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	Type             ServerAction_ActionType `protobuf:"varint,1,opt,name=type,proto3,enum=srspb.ServerAction_ActionType" json:"type,omitempty"`
	TargetClientGuid string                  `protobuf:"bytes,2,opt,name=target_client_guid,json=targetClientGuid,proto3" json:"target_client_guid,omitempty"`
	Reason           string                  `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Duration         *int64                  `protobuf:"varint,4,opt,name=duration,proto3,oneof" json:"duration,omitempty"` // Duration in seconds for temporary actions
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ServerAction) Reset() {
	*x = ServerAction{}
	mi := &file_srs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAction) ProtoMessage() {}

func (x *ServerAction) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAction.ProtoReflect.Descriptor instead.
func (*ServerAction) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{4}
}

func (x *ServerAction) GetType() ServerAction_ActionType {
	if x != nil {
		return x.Type
	}
	return ServerAction_UNKNOWN
}

func (x *ServerAction) GetTargetClientGuid() string {
	if x != nil {
		return x.TargetClientGuid
	}
	return ""
}

func (x *ServerAction) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ServerAction) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

// Initial client connection request
type ClientConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientConnectRequest) Reset() {
	*x = ClientConnectRequest{}
	mi := &file_srs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConnectRequest) ProtoMessage() {}

func (x *ClientConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConnectRequest.ProtoReflect.Descriptor instead.
func (*ClientConnectRequest) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{5}
}

func (x *ClientConnectRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Initial server connection response
type ServerConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ClientGuid    *string                `protobuf:"bytes,3,opt,name=client_guid,json=clientGuid,proto3,oneof" json:"client_guid,omitempty"` // Server sets the Client GUID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerConnectResponse) Reset() {
	*x = ServerConnectResponse{}
	mi := &file_srs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConnectResponse) ProtoMessage() {}

func (x *ServerConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConnectResponse.ProtoReflect.Descriptor instead.
func (*ServerConnectResponse) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{6}
}

func (x *ServerConnectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ServerConnectResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ServerConnectResponse) GetClientGuid() string {
	if x != nil && x.ClientGuid != nil {
		return *x.ClientGuid
	}
	return ""
}

// Client information
type ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientGuid    string                 `protobuf:"bytes,1,opt,name=client_guid,json=clientGuid,proto3" json:"client_guid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coalition     string                 `protobuf:"bytes,3,opt,name=coalition,proto3" json:"coalition,omitempty"`
	LastUpdate    int64                  `protobuf:"varint,4,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_srs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{7}
}

func (x *ClientInfo) GetClientGuid() string {
	if x != nil {
		return x.ClientGuid
	}
	return ""
}

func (x *ClientInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientInfo) GetCoalition() string {
	if x != nil {
		return x.Coalition
	}
	return ""
}

func (x *ClientInfo) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

// Radio information
type RadioInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientGuid    string                 `protobuf:"bytes,1,opt,name=client_guid,json=clientGuid,proto3" json:"client_guid,omitempty"`
	LastUpdate    int64                  `protobuf:"varint,2,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Radios        []*Radio               `protobuf:"bytes,3,rep,name=radios,proto3" json:"radios,omitempty"`
	Muted         bool                   `protobuf:"varint,4,opt,name=muted,proto3" json:"muted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RadioInfo) Reset() {
	*x = RadioInfo{}
	mi := &file_srs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RadioInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioInfo) ProtoMessage() {}

func (x *RadioInfo) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioInfo.ProtoReflect.Descriptor instead.
func (*RadioInfo) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{8}
}

func (x *RadioInfo) GetClientGuid() string {
	if x != nil {
		return x.ClientGuid
	}
	return ""
}

func (x *RadioInfo) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *RadioInfo) GetRadios() []*Radio {
	if x != nil {
		return x.Radios
	}
	return nil
}

func (x *RadioInfo) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

type Radio struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Frequency     float32                `protobuf:"fixed32,3,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Enabled       bool                   `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Radio) Reset() {
	*x = Radio{}
	mi := &file_srs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Radio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Radio) ProtoMessage() {}

func (x *Radio) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Radio.ProtoReflect.Descriptor instead.
func (*Radio) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{9}
}

func (x *Radio) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Radio) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Radio) GetFrequency() float32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *Radio) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Server settings
type ServerSettings struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Settings      map[string]*ServerSetting `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerSettings) Reset() {
	*x = ServerSettings{}
	mi := &file_srs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSettings) ProtoMessage() {}

func (x *ServerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSettings.ProtoReflect.Descriptor instead.
func (*ServerSettings) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{10}
}

func (x *ServerSettings) GetSettings() map[string]*ServerSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

// Individual server setting
type ServerSetting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*ServerSetting_StringValue
	//	*ServerSetting_BoolValue
	//	*ServerSetting_IntValue
	//	*ServerSetting_FloatValue
	Value         isServerSetting_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerSetting) Reset() {
	*x = ServerSetting{}
	mi := &file_srs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSetting) ProtoMessage() {}

func (x *ServerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSetting.ProtoReflect.Descriptor instead.
func (*ServerSetting) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{11}
}

func (x *ServerSetting) GetValue() isServerSetting_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ServerSetting) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*ServerSetting_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *ServerSetting) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*ServerSetting_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *ServerSetting) GetIntValue() int32 {
	if x != nil {
		if x, ok := x.Value.(*ServerSetting_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *ServerSetting) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.Value.(*ServerSetting_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

type isServerSetting_Value interface {
	isServerSetting_Value()
}

type ServerSetting_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ServerSetting_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type ServerSetting_IntValue struct {
	IntValue int32 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type ServerSetting_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,4,opt,name=float_value,json=floatValue,proto3,oneof"`
}

func (*ServerSetting_StringValue) isServerSetting_Value() {}

func (*ServerSetting_BoolValue) isServerSetting_Value() {}

func (*ServerSetting_IntValue) isServerSetting_Value() {}

func (*ServerSetting_FloatValue) isServerSetting_Value() {}

// Client synchronization request
type ClientSyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientGuid    string                 `protobuf:"bytes,1,opt,name=client_guid,json=clientGuid,proto3" json:"client_guid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientSyncRequest) Reset() {
	*x = ClientSyncRequest{}
	mi := &file_srs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSyncRequest) ProtoMessage() {}

func (x *ClientSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSyncRequest.ProtoReflect.Descriptor instead.
func (*ClientSyncRequest) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{12}
}

func (x *ClientSyncRequest) GetClientGuid() string {
	if x != nil {
		return x.ClientGuid
	}
	return ""
}

// Server synchronization response
type ServerSyncResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConnectedClients []*ClientInfo          `protobuf:"bytes,1,rep,name=connected_clients,json=connectedClients,proto3" json:"connected_clients,omitempty"`
	ServerSettings   *ServerSettings        `protobuf:"bytes,2,opt,name=server_settings,json=serverSettings,proto3" json:"server_settings,omitempty"`
	Version          string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ServerSyncResponse) Reset() {
	*x = ServerSyncResponse{}
	mi := &file_srs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSyncResponse) ProtoMessage() {}

func (x *ServerSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSyncResponse.ProtoReflect.Descriptor instead.
func (*ServerSyncResponse) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{13}
}

func (x *ServerSyncResponse) GetConnectedClients() []*ClientInfo {
	if x != nil {
		return x.ConnectedClients
	}
	return nil
}

func (x *ServerSyncResponse) GetServerSettings() *ServerSettings {
	if x != nil {
		return x.ServerSettings
	}
	return nil
}

func (x *ServerSyncResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Client disconnect request
type ClientDisconnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientGuid    string                 `protobuf:"bytes,1,opt,name=client_guid,json=clientGuid,proto3" json:"client_guid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientDisconnectRequest) Reset() {
	*x = ClientDisconnectRequest{}
	mi := &file_srs_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientDisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientDisconnectRequest) ProtoMessage() {}

func (x *ClientDisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientDisconnectRequest.ProtoReflect.Descriptor instead.
func (*ClientDisconnectRequest) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{14}
}

func (x *ClientDisconnectRequest) GetClientGuid() string {
	if x != nil {
		return x.ClientGuid
	}
	return ""
}

// Generic server response
type ServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerResponse) Reset() {
	*x = ServerResponse{}
	mi := &file_srs_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerResponse) ProtoMessage() {}

func (x *ServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_srs_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerResponse.ProtoReflect.Descriptor instead.
func (*ServerResponse) Descriptor() ([]byte, []int) {
	return file_srs_proto_rawDescGZIP(), []int{15}
}

func (x *ServerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ServerResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_srs_proto protoreflect.FileDescriptor

const file_srs_proto_rawDesc = "" +
	"\n" +
	"\tsrs.proto\x12\x05srspb\"\a\n" +
	"\x05Empty\"3\n" +
	"\x10SubscribeRequest\x12\x1f\n" +
	"\vclient_guid\x18\x01 \x01(\tR\n" +
	"clientGuid\"\xa7\x03\n" +
	"\fServerUpdate\x122\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1e.srspb.ServerUpdate.UpdateTypeR\x04type\x12:\n" +
	"\rclient_update\x18\x02 \x01(\v2\x13.srspb.ClientUpdateH\x00R\fclientUpdate\x12:\n" +
	"\rserver_action\x18\x03 \x01(\v2\x13.srspb.ServerActionH\x00R\fserverAction\x12@\n" +
	"\x0fsettings_update\x18\x04 \x01(\v2\x15.srspb.ServerSettingsH\x00R\x0esettingsUpdate\"\x9e\x01\n" +
	"\n" +
	"UpdateType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x11\n" +
	"\rCLIENT_JOINED\x10\x01\x12\x0f\n" +
	"\vCLIENT_LEFT\x10\x02\x12\x17\n" +
	"\x13CLIENT_RADIO_UPDATE\x10\x03\x12\x16\n" +
	"\x12CLIENT_INFO_UPDATE\x10\x04\x12\x1b\n" +
	"\x17SERVER_SETTINGS_CHANGED\x10\x05\x12\x11\n" +
	"\rSERVER_ACTION\x10\x06B\b\n" +
	"\x06update\"\xbd\x01\n" +
	"\fClientUpdate\x12\x1f\n" +
	"\vclient_guid\x18\x01 \x01(\tR\n" +
	"clientGuid\x127\n" +
	"\vclient_info\x18\x02 \x01(\v2\x11.srspb.ClientInfoH\x00R\n" +
	"clientInfo\x88\x01\x01\x124\n" +
	"\n" +
	"radio_info\x18\x03 \x01(\v2\x10.srspb.RadioInfoH\x01R\tradioInfo\x88\x01\x01B\x0e\n" +
	"\f_client_infoB\r\n" +
	"\v_radio_info\"\xfa\x01\n" +
	"\fServerAction\x122\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1e.srspb.ServerAction.ActionTypeR\x04type\x12,\n" +
	"\x12target_client_guid\x18\x02 \x01(\tR\x10targetClientGuid\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x1f\n" +
	"\bduration\x18\x04 \x01(\x03H\x00R\bduration\x88\x01\x01\"B\n" +
	"\n" +
	"ActionType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04KICK\x10\x01\x12\a\n" +
	"\x03BAN\x10\x02\x12\b\n" +
	"\x04MUTE\x10\x03\x12\n" +
	"\n" +
	"\x06UNMUTE\x10\x04B\v\n" +
	"\t_duration\"0\n" +
	"\x14ClientConnectRequest\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\x8c\x01\n" +
	"\x15ServerConnectResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12$\n" +
	"\vclient_guid\x18\x03 \x01(\tH\x00R\n" +
	"clientGuid\x88\x01\x01B\x0e\n" +
	"\f_client_guid\"\x80\x01\n" +
	"\n" +
	"ClientInfo\x12\x1f\n" +
	"\vclient_guid\x18\x01 \x01(\tR\n" +
	"clientGuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tcoalition\x18\x03 \x01(\tR\tcoalition\x12\x1f\n" +
	"\vlast_update\x18\x04 \x01(\x03R\n" +
	"lastUpdate\"\x89\x01\n" +
	"\tRadioInfo\x12\x1f\n" +
	"\vclient_guid\x18\x01 \x01(\tR\n" +
	"clientGuid\x12\x1f\n" +
	"\vlast_update\x18\x02 \x01(\x03R\n" +
	"lastUpdate\x12$\n" +
	"\x06radios\x18\x03 \x03(\v2\f.srspb.RadioR\x06radios\x12\x14\n" +
	"\x05muted\x18\x04 \x01(\bR\x05muted\"c\n" +
	"\x05Radio\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tfrequency\x18\x03 \x01(\x02R\tfrequency\x12\x18\n" +
	"\aenabled\x18\x06 \x01(\bR\aenabled\"\xa4\x01\n" +
	"\x0eServerSettings\x12?\n" +
	"\bsettings\x18\x01 \x03(\v2#.srspb.ServerSettings.SettingsEntryR\bsettings\x1aQ\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.srspb.ServerSettingR\x05value:\x028\x01\"\xa0\x01\n" +
	"\rServerSetting\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x02 \x01(\bH\x00R\tboolValue\x12\x1d\n" +
	"\tint_value\x18\x03 \x01(\x05H\x00R\bintValue\x12!\n" +
	"\vfloat_value\x18\x04 \x01(\x02H\x00R\n" +
	"floatValueB\a\n" +
	"\x05value\"4\n" +
	"\x11ClientSyncRequest\x12\x1f\n" +
	"\vclient_guid\x18\x01 \x01(\tR\n" +
	"clientGuid\"\xae\x01\n" +
	"\x12ServerSyncResponse\x12>\n" +
	"\x11connected_clients\x18\x01 \x03(\v2\x11.srspb.ClientInfoR\x10connectedClients\x12>\n" +
	"\x0fserver_settings\x18\x02 \x01(\v2\x15.srspb.ServerSettingsR\x0eserverSettings\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\":\n" +
	"\x17ClientDisconnectRequest\x12\x1f\n" +
	"\vclient_guid\x18\x01 \x01(\tR\n" +
	"clientGuid\"O\n" +
	"\x0eServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage2\xda\x03\n" +
	"\n" +
	"SRSService\x12D\n" +
	"\aConnect\x12\x1b.srspb.ClientConnectRequest\x1a\x1c.srspb.ServerConnectResponse\x12<\n" +
	"\x10UpdateClientInfo\x12\x11.srspb.ClientInfo\x1a\x15.srspb.ServerResponse\x12:\n" +
	"\x0fUpdateRadioInfo\x12\x10.srspb.RadioInfo\x1a\x15.srspb.ServerResponse\x12A\n" +
	"\n" +
	"SyncClient\x12\x18.srspb.ClientSyncRequest\x1a\x19.srspb.ServerSyncResponse\x12I\n" +
	"\x10DisconnectClient\x12\x1e.srspb.ClientDisconnectRequest\x1a\x15.srspb.ServerResponse\x128\n" +
	"\x11GetServerSettings\x12\f.srspb.Empty\x1a\x15.srspb.ServerSettings\x12D\n" +
	"\x12SubscribeToUpdates\x12\x17.srspb.SubscribeRequest\x1a\x13.srspb.ServerUpdate0\x01B+Z)github.com/FPGSchiba/vcs-srs-server/srspbb\x06proto3"

var (
	file_srs_proto_rawDescOnce sync.Once
	file_srs_proto_rawDescData []byte
)

func file_srs_proto_rawDescGZIP() []byte {
	file_srs_proto_rawDescOnce.Do(func() {
		file_srs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_srs_proto_rawDesc), len(file_srs_proto_rawDesc)))
	})
	return file_srs_proto_rawDescData
}

var file_srs_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_srs_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_srs_proto_goTypes = []any{
	(ServerUpdate_UpdateType)(0),    // 0: srspb.ServerUpdate.UpdateType
	(ServerAction_ActionType)(0),    // 1: srspb.ServerAction.ActionType
	(*Empty)(nil),                   // 2: srspb.Empty
	(*SubscribeRequest)(nil),        // 3: srspb.SubscribeRequest
	(*ServerUpdate)(nil),            // 4: srspb.ServerUpdate
	(*ClientUpdate)(nil),            // 5: srspb.ClientUpdate
	(*ServerAction)(nil),            // 6: srspb.ServerAction
	(*ClientConnectRequest)(nil),    // 7: srspb.ClientConnectRequest
	(*ServerConnectResponse)(nil),   // 8: srspb.ServerConnectResponse
	(*ClientInfo)(nil),              // 9: srspb.ClientInfo
	(*RadioInfo)(nil),               // 10: srspb.RadioInfo
	(*Radio)(nil),                   // 11: srspb.Radio
	(*ServerSettings)(nil),          // 12: srspb.ServerSettings
	(*ServerSetting)(nil),           // 13: srspb.ServerSetting
	(*ClientSyncRequest)(nil),       // 14: srspb.ClientSyncRequest
	(*ServerSyncResponse)(nil),      // 15: srspb.ServerSyncResponse
	(*ClientDisconnectRequest)(nil), // 16: srspb.ClientDisconnectRequest
	(*ServerResponse)(nil),          // 17: srspb.ServerResponse
	nil,                             // 18: srspb.ServerSettings.SettingsEntry
}
var file_srs_proto_depIdxs = []int32{
	0,  // 0: srspb.ServerUpdate.type:type_name -> srspb.ServerUpdate.UpdateType
	5,  // 1: srspb.ServerUpdate.client_update:type_name -> srspb.ClientUpdate
	6,  // 2: srspb.ServerUpdate.server_action:type_name -> srspb.ServerAction
	12, // 3: srspb.ServerUpdate.settings_update:type_name -> srspb.ServerSettings
	9,  // 4: srspb.ClientUpdate.client_info:type_name -> srspb.ClientInfo
	10, // 5: srspb.ClientUpdate.radio_info:type_name -> srspb.RadioInfo
	1,  // 6: srspb.ServerAction.type:type_name -> srspb.ServerAction.ActionType
	11, // 7: srspb.RadioInfo.radios:type_name -> srspb.Radio
	18, // 8: srspb.ServerSettings.settings:type_name -> srspb.ServerSettings.SettingsEntry
	9,  // 9: srspb.ServerSyncResponse.connected_clients:type_name -> srspb.ClientInfo
	12, // 10: srspb.ServerSyncResponse.server_settings:type_name -> srspb.ServerSettings
	13, // 11: srspb.ServerSettings.SettingsEntry.value:type_name -> srspb.ServerSetting
	7,  // 12: srspb.SRSService.Connect:input_type -> srspb.ClientConnectRequest
	9,  // 13: srspb.SRSService.UpdateClientInfo:input_type -> srspb.ClientInfo
	10, // 14: srspb.SRSService.UpdateRadioInfo:input_type -> srspb.RadioInfo
	14, // 15: srspb.SRSService.SyncClient:input_type -> srspb.ClientSyncRequest
	16, // 16: srspb.SRSService.DisconnectClient:input_type -> srspb.ClientDisconnectRequest
	2,  // 17: srspb.SRSService.GetServerSettings:input_type -> srspb.Empty
	3,  // 18: srspb.SRSService.SubscribeToUpdates:input_type -> srspb.SubscribeRequest
	8,  // 19: srspb.SRSService.Connect:output_type -> srspb.ServerConnectResponse
	17, // 20: srspb.SRSService.UpdateClientInfo:output_type -> srspb.ServerResponse
	17, // 21: srspb.SRSService.UpdateRadioInfo:output_type -> srspb.ServerResponse
	15, // 22: srspb.SRSService.SyncClient:output_type -> srspb.ServerSyncResponse
	17, // 23: srspb.SRSService.DisconnectClient:output_type -> srspb.ServerResponse
	12, // 24: srspb.SRSService.GetServerSettings:output_type -> srspb.ServerSettings
	4,  // 25: srspb.SRSService.SubscribeToUpdates:output_type -> srspb.ServerUpdate
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_srs_proto_init() }
func file_srs_proto_init() {
	if File_srs_proto != nil {
		return
	}
	file_srs_proto_msgTypes[2].OneofWrappers = []any{
		(*ServerUpdate_ClientUpdate)(nil),
		(*ServerUpdate_ServerAction)(nil),
		(*ServerUpdate_SettingsUpdate)(nil),
	}
	file_srs_proto_msgTypes[3].OneofWrappers = []any{}
	file_srs_proto_msgTypes[4].OneofWrappers = []any{}
	file_srs_proto_msgTypes[6].OneofWrappers = []any{}
	file_srs_proto_msgTypes[11].OneofWrappers = []any{
		(*ServerSetting_StringValue)(nil),
		(*ServerSetting_BoolValue)(nil),
		(*ServerSetting_IntValue)(nil),
		(*ServerSetting_FloatValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_srs_proto_rawDesc), len(file_srs_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_srs_proto_goTypes,
		DependencyIndexes: file_srs_proto_depIdxs,
		EnumInfos:         file_srs_proto_enumTypes,
		MessageInfos:      file_srs_proto_msgTypes,
	}.Build()
	File_srs_proto = out.File
	file_srs_proto_goTypes = nil
	file_srs_proto_depIdxs = nil
}
